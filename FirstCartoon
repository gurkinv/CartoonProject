#include "TXLib.h"


void CatBody (double x, double y, double size,
              double distFoot,
              double distTail,
              double hLeftFoot, double hRightFoot,
              double rLeftFoot, double rRightFoot);  //10

void CatHead (double x, double y, int widthline, double size,
              double distEars,
              int redHat, int greenHat, int blueHat);  //8

void CatReversedHead (double x, double y, int widthline, double size,
                      double distEars,
                      int redHat, int greenHat, int blueHat);

void VoiceBox (double x, double y, double size,
               double rCircle);

void SceneOne (int redHat, int greenHat, int blueHat);

void SceneTwo (int redHat, int greenHat, int blueHat);

void SceneThree (int redHat, int greenHat, int blueHat);

void SceneFour (int redHat, int greenHat, int blueHat);

void SceneFive (int redHat, int greenHat, int blueHat);

//-----------------------------------------------------------------------------
int main ()
    {
    //---Окошко---
    txCreateWindow (1200, 800);
    txSetFillColor (TX_WHITE);
    txRectangle(0, 0, 1200, 800);
    int redHat = 122;
    int greenHat = 69;
    int blueHat = 31;

    //---Котик---
    CatBody (600, 400, 2, 20, 70, -5, -5, 5, 5);  //10
    CatHead (600, 400, 2, 2, 30, redHat, greenHat, blueHat);   //8

    SceneOne (redHat, greenHat, blueHat);

    SceneTwo (redHat, greenHat, blueHat);

    //txPlaySound ("KPSS_Begemot.wav");
    SceneThree (redHat, greenHat, blueHat);

    SceneFour (redHat, greenHat, blueHat);

    SceneFive (redHat, greenHat, blueHat);

    return 0;
    }

//-----------------------------------------------------------------------------
void SceneOne (int redHat, int greenHat, int blueHat)
    {
    for(int n = 1; n <= 20; n++)
        {
        CatBody (600, 400, 2, 20, 70, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30, redHat, greenHat, blueHat);  //8
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (565, 200, "Привет!");
        txTextOut (450, 550, "Я - большой рыжий кот Гоша");

        txSleep(100);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 20; n++)
        {
        CatBody (600, 400, 2, 20, 70, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30, redHat, greenHat, blueHat);  //8
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (450, 550, "Я умею делать много вещей");

        txSleep(100);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    }

void SceneTwo (int redHat, int greenHat, int blueHat)
    {
    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400 - (n%2)*200, 2, 20, 70, 20*((n+2)%4), 20*(n%4), 5, 5);  //10
        CatHead (600, 400 - (n%2)*200, 2, 2, 30, redHat, greenHat, blueHat);  //8
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (470, 550, "Например высоко прыгать");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30, redHat, greenHat, blueHat);  //8
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (520, 550, "Вилять хвостом");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (510, 550, "И двигать ушами");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (470, 550, "Но больше всего я люблю...");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }
    }
    
void SceneThree (int redHat, int greenHat, int blueHat)
    {
    for(int n = 1; n <= 20; n++)
        {
        CatBody (600 - (n%2)*200, 400, 2, 20, 70, -10*((n+2)%4), -10*(n%4), 5+(2*(n%2)), 5+(2*((n+1)%2)));  //10
        CatHead (600 - (n%2)*200, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8
        VoiceBox (800, 500, 2, 15-(n%2));
        redHat += 3*n;
        greenHat += 2*n;
        blueHat += 1*n;

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (440, 550, "Танцевать!");

        txSleep(490);
        txSetFillColor (TX_WHITE);
        txClear();
        }
    }
    
void SceneFour (int redHat, int greenHat, int blueHat)
    {
    for(int n = 1; n <= 20; n++)
        {
        if(n % 3 == 0)
            {
            CatBody (600 - (n%2)*200, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
            CatHead (600 - (n%2)*200, 400, 2, 2, 30, redHat, greenHat, blueHat);  //8
            VoiceBox (800, 500, 2, 15);
            }

        if(n % 3 == 1)
            {
            CatBody (600 - (n%2)*200, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
            CatReversedHead (600 - (n%2)*200, 200, 2, 2, 30, redHat, greenHat, blueHat);
            VoiceBox (800, 500, 2, 15);
            }

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (480, 550, "Ой Ой Ой моя голова!");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 20; n++)
        {
        if(n % 2 == 1)
            {
            CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
            CatHead (600, 400, 2, 2, 30, redHat, greenHat, blueHat);  //8
            VoiceBox (800, 500, 2, 15);
            }

        else
            {
            CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
            CatReversedHead (600 - (n%2)*200, 200, 2, 2, 30, redHat, greenHat, blueHat);
            VoiceBox (800, 500, 2, 15);
            }

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (420, 550, "Она еще никогда так сильно не кружилась!");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }
    }

void SceneFive (int redHat, int greenHat, int blueHat)
    {
    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (475, 550, "Что-то мне совсем поплохело");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (460, 550, "Похоже моя шапочка сломалась :(");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8

        txSelectFont ("Comic Sans MS", 40, 10, FW_BOLD, false, false, false, 0);
        txTextOut (470, 550, "Почему же так случилось...?");

        txSleep(300);
        txSetFillColor (TX_WHITE);
        txClear();
        }

    for(int n = 1; n <= 15; n++)
        {
        CatBody (600, 400, 2, 20, 70-n%2*20, -51*n%2, -(51*(n+1)%2), 5, 5);  //10
        CatHead (600, 400, 2, 2, 30-n%2*10, redHat, greenHat, blueHat);  //8

        txSelectFont ("Comic Sans MS", 100, 20, FW_BOLD, false, false, false, 0);
        txSetFillColor ((TX_BLACK));
        txCircle (600, 400, 50*n);
        txSetColor ((TX_WHITE));
        txTextOut (510, 400, "КОНЕЦ!");

        txSleep(100);
        txSetFillColor (TX_WHITE);
        txClear();
        }
    }

//-----------------------------------------------------------------------------
void CatBody (double x, double y, double size,
              double distFoot,
              double distTail,
              double hLeftFoot, double hRightFoot,
              double rLeftFoot, double rRightFoot)
    {
    //---Брюшко---
    txSetFillColor (RGB(217, 113, 28));
    POINT body[3] = {{ROUND(x),           ROUND(y)          },
                     {ROUND(x - 40*size), ROUND(y + 70*size)},
                     {ROUND(x + 40*size), ROUND(y + 70*size)}};
    txPolygon (body, 3);

    //---Лапки---
    //------Левая лапка------
    txSetFillColor (RGB(206, 107, 74));
    txCircle (x - distFoot, y + 70*size + hLeftFoot, rLeftFoot*size);

    //------Правая лапка------
    txSetFillColor (RGB(206, 107, 74));
    txCircle (x + distFoot, y + 70*size + hRightFoot, rRightFoot*size);

    //---Хвостик---
    txLine (x + 40*size, y + 70*size, x + distTail*size, y);

    }

void CatHead (double x, double y, int widthline, double size,
              double distEars,
              int redHat, int greenHat, int blueHat)
    {
    //---Голова---
    txSetColor ((TX_BLACK), widthline);
    txSetFillColor (RGB(217, 113, 28));
    txCircle (x, y - 20*size, 20*size);

    //---Носик---
    txSetFillColor ((TX_BLACK));
    POINT nose[3] = {{ROUND(x),          ROUND(y - 10*size)},
                     {ROUND(x - 3*size), ROUND(y - 15*size)},
                     {ROUND(x + 3*size), ROUND(y - 15*size)}};
    txPolygon (nose, 3);

    //---Усы---
    txLine (x, y - 10*size, x + 20*size, y - 20*size);
    txLine (x, y - 10*size, x + 20*size, y - 10*size);
    txLine (x, y - 10*size, x - 20*size, y - 20*size);
    txLine (x, y - 10*size, x - 20*size, y - 10*size);

    //---Ушки---
    //------Левое ушко------
    txSetFillColor (RGB(217, 113, 28));
    POINT leftEar[3] = {{ROUND(x - 18*size),       ROUND(y - 28*size)},
                        {ROUND(x - distEars*size), ROUND(y - 50*size)},
                        {ROUND(x - 10*size),       ROUND(y - 38*size)}};
    txPolygon (leftEar, 3);

    //------Правое ушко------
    txSetFillColor (RGB(217, 113, 28));
    POINT rightEar[3] = {{ROUND(x + 18*size),       ROUND(y - 28*size)},
                         {ROUND(x + distEars*size), ROUND(y - 50*size)},
                         {ROUND(x + 10*size),       ROUND(y - 38*size)}};
    txPolygon (rightEar, 3);

    //---Глазки---
    txSetFillColor (TX_BLACK);
    txCircle (x - 6*size, y - 22*size, 2*size);
    txCircle (x + 6*size, y - 22*size, 2*size);

    //---Ротик---
    txLine (x, y - 10*size, x - 3*size, y - 10);
    txLine (x, y - 10*size, x + 3*size, y - 10);

    //---Колпачок---
    txSetFillColor (RGB(redHat, greenHat, blueHat));
    POINT hatForCat[3] = {{ROUND(x - 10*size), ROUND(y - 39*size)},
                          {ROUND(x),           ROUND(y - 70*size)},
                          {ROUND(x + 10*size), ROUND(y - 39*size)}};
    txPolygon (hatForCat, 3);
    }

void CatReversedHead (double x, double y, int widthline, double size,
                      double distEars,
                      int redHat, int greenHat, int blueHat)
    {
    //---Голова---
    txSetColor ((TX_BLACK), widthline);
    txSetFillColor (RGB(217, 113, 28));
    txCircle (x, y - 20*size, 20*size);

    //---Носик---
    txSetFillColor ((TX_BLACK));
    POINT nose[3] = {{ROUND(x),          ROUND(y - 30*size)},
                     {ROUND(x - 3*size), ROUND(y - 25*size)},
                     {ROUND(x + 3*size), ROUND(y - 25*size)}};
    txPolygon (nose, 3);

    //---Усы---
    txLine (x, y - 30*size, x + 20*size, y - 20*size);
    txLine (x, y - 30*size, x + 20*size, y - 30*size);
    txLine (x, y - 30*size, x - 20*size, y - 20*size);
    txLine (x, y - 30*size, x - 20*size, y - 30*size);

    //---Ушки---
    //------Левое ушко------
    txSetFillColor (RGB(217, 113, 28));
    POINT leftEar[3] = {{ROUND(x - 18*size),       ROUND(y - 12*size)},
                        {ROUND(x - distEars*size), ROUND(y + 10*size)},
                        {ROUND(x - 10*size),       ROUND(y - 2*size)}};
    txPolygon (leftEar, 3);

    //------Правое ушко------
    txSetFillColor (RGB(217, 113, 28));
    POINT rightEar[3] = {{ROUND(x + 18*size),       ROUND(y - 12*size)},
                         {ROUND(x + distEars*size), ROUND(y + 10*size)},
                         {ROUND(x + 10*size),       ROUND(y - 2*size)}};
    txPolygon (rightEar, 3);

    //---Глазки---
    txSetFillColor (TX_BLACK);
    txCircle (x - 6*size, y - 18*size, 2*size);
    txCircle (x + 6*size, y - 18*size, 2*size);

    //---Ротик---
    txLine (x, y - 30*size, x - 3*size, y - 30);
    txLine (x, y - 30*size, x + 3*size, y - 30);

    //---Колпачок---
    txSetFillColor (RGB(redHat, greenHat, blueHat));
    POINT hatForCat[3] = {{ROUND(x - 10*size), ROUND(y - 1*size)},
                          {ROUND(x),           ROUND(y + 30*size)},
                          {ROUND(x + 10*size), ROUND(y - 1*size)}};
    txPolygon (hatForCat, 3);
    }

void VoiceBox (double x, double y, double size,
               double rCircle)
    {
    //---Колонка---
    txSetFillColor (TX_BLACK);
    txRectangle(x, y, x + 40*size, y - 80*size);
    //------Динамики------
    txSetFillColor (TX_GRAY);
    txCircle (x + 20*size, y - 60*size, rCircle*size);
    txCircle (x + 20*size, y - 20*size, rCircle*size);
    }
